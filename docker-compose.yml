version: "3.8"

networks:
  client-server:

services:
  wireguard:
    image: lscr.io/linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow
      - SERVERURL=192.168.0.101
      - SERVERPORT=51820
      - PEERS=100
      - PEERDNS=8.8.8.8, 8.8.4.4
      - INTERNAL_SUBNET=10.13.13.0
      - ALLOWEDIPS=0.0.0.0/0, ::/0
    volumes:
      - wireguard-configs:/config
      - /lib/modules:/lib/modules
    ports:
      - "51820:51820/udp"
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped

  backend:
    container_name: api
    build: ./backend
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - wireguard
    env_file:
      - backend/.env
    volumes:
      - wireguard-configs:/app/configs
    networks:
      - client-server

  frontend:
    container_name: frontend
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - client-server
      
  postgres:
    container_name: postgres
    image: postgres:latest
    env_file:
      - backend/.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - client-server

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - client-server

  ngrok:
    container_name: ngrok
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    ports:
      - 4040:4040

volumes:
  wireguard-configs:
  postgres-data:
